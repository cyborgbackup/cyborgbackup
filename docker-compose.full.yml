version: '3'

services:
  postgres:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    ports:
      - "5432:5432"
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
  rabbitmq:
    image: rabbitmq:management
    volumes:
      - ./tools/rabbitmq_docker/:/etc/rabbitmq/
    ports:
      - "5672:5672"
      - "15672:15672"
  callback_receiver:
    image: cyborgbackup/cyborgbackup:latest
    command: bash -c "python /cyborgbackup/manage.py run_callback_receiver -v 3"
    env_file:
      - .env
    depends_on:
      - postgres
      - rabbitmq
      - redis
  channel_workers:
    image: cyborgbackup/cyborgbackup:latest
    command: bash -c 'python /cyborgbackup/manage.py runworker --only-channels websocket.*'
    env_file:
      - .env
    depends_on:
      - postgres
      - rabbitmq
      - redis
  api:
    image: cyborgbackup/cyborgbackup:latest
    command: bash -c "python /cyborgbackup/manage.py migrate --noinput && python /cyborgbackup/manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - rabbitmq
      - redis
    restart: unless-stopped
  celery:
    image: cyborgbackup/cyborgbackup:latest
    command: celery -A cyborgbackup worker -E -c 1
    env_file:
      - .env
    depends_on:
      - postgres
      - rabbitmq
      - redis
  celery_beat:
    image: cyborgbackup/cyborgbackup:latest
    command: celery -A cyborgbackup beat
    env_file:
      - .env
    depends_on:
      - postgres
      - rabbitmq
      - redis
  mongodb:
    image: mongo:latest
    volumes:
      - mongo_data:/data/db
    ports:
      - 27017:27017
  ui:
    image: cyborgbackup/cyborgbackup-ui:develop
    depends_on:
      - api
    ports:
      - "8088:80"

volumes:
  postgres_data:
  mongo_data:
