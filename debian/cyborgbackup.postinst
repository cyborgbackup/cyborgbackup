#!/bin/sh

if [ "$1" = "configure" ]; then
  if [ -d /usr/doc -a ! -e /usr/doc/cyborgbackup -a -d /usr/share/doc/cyborgbackup ]; then
    ln -sf ../share/doc/cyborgbackup /usr/doc/cyborgbackup
  fi
fi

CYBORG_POSTGRES_PASSWORD=$(tr -cd '[:alnum:]' < /dev/urandom | fold -w50 | head -n1)

if [ ! -f /opt/cyborgbackup/.env ]
then
    cat >> /opt/cyborgbackup/.env <<EOF
export POSTGRES_USER="cyborgbackup"
export POSTGRES_PASSWORD="$CYBORG_POSTGRES_PASSWORD"
export REDIS_HOST="localhost"
EOF
else
    . /opt/cyborgbackup/.env
    CYBORG_POSTGRES_PASSWORD=$POSTGRES_PASSWORD
fi

if [ ! -f /etc/default/cyborgbackup ]
then
  cat >> /etc/default/cyborgbackup <<EOF
POSTGRES_USER="cyborgbackup"
POSTGRES_PASSWORD="$CYBORG_POSTGRES_PASSWORD"
REDIS_HOST="localhost"
EOF
fi

test -f /opt/cyborgbackup/.bashrc && cat /opt/cyborgbackup/.bashrc | grep -q 'venv' 2>&1 1>/dev/null
if [ $? -ne 0 ]
then
    echo 'source $HOME/.env' >> /opt/cyborgbackup/.bashrc
    echo 'test -z "$VIRTUAL_ENV" && test -d $HOME/venv/bin && source $HOME/venv/bin/activate' >> /opt/cyborgbackup/.bashrc
fi

chown -R cyborgbackup:cyborgbackup /opt/cyborgbackup

if [ ! -d /opt/cyborgbackup/venv/ ]
then
    echo "Create Python3 CyBorgBackup Virtual Env"
    su - cyborgbackup -c "python3 -m venv /opt/cyborgbackup/venv/" || exit $?
fi

su - postgres -c /usr/share/cyborgbackup/tools/scripts/makedb.sh || exit $?

su - cyborgbackup -c 'source $HOME/venv/bin/activate && /usr/share/cyborgbackup/tools/scripts/initcyborg.sh' || exit $?

if [ ! -f /etc/nginx/sites-available/cyborg ]
then
  cp /usr/share/cyborgbackup/tools/config/nginx.vhost /etc/nginx/sites-available/cyborg
  rm /etc/nginx/sites-enabled/default
  ln -s /etc/nginx/sites-available/cyborg /etc/nginx/sites-enabled/cyborg
  nginx -t && nginx -s reload
fi
