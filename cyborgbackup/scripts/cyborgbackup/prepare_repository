#!/bin/bash

########################################################
##          CyBorgBackup Prepare Repository           ##
##   Author : GaÃ«tan Ferez <gaetan@cyborgbackup.dev>  ##
##                 Version 0.1                        ##
########################################################

echo "Check Curl"
curl -V 2>&1 1>/dev/null || (sudo apt-get -q update && sudo apt-get -q -y install curl)
binary=$(curl -sL https://api.github.com/repos/borgbackup/borg/releases/latest | grep "browser_download_url" | grep 'borg-linux64"' | cut -d : -f 2,3 | tr -d \\\")

echo "Check Borg"
borg -V 2>&1 1>/dev/null || (echo "Borg not found. Install it" && curl -sL $binary -o /tmp/borg && sudo mv /tmp/borg /usr/local/bin/borg && sudo chmod a+x /usr/local/bin/borg)

export BORG_PASSPHRASE=$CYBORG_BORG_PASSPHRASE
export BORG_REPO=$CYBORG_BORG_REPOSITORY
cmd="borg init --encryption=repokey"
(test -f $BORG_REPOSITORY && grep -q "Borg Backup repository" $BORG_REPO/README 2>&1 1>/dev/null) || (echo "Initialize Repository." && echo $cmd && eval $cmd)
if [ $? -eq 0 ]
then
    token=$CYBORG_AGENT_TOKEN
    data="{\"ready\": true}"
    echo "Push repository status to CyBorgBackup"
    cmd="curl -f -s -X PATCH -H 'Content-type: application/json' -H 'Authorization: Token $token' --data '$data' $CYBORG_URL"
    eval $cmd
    if [ $? -eq 0 ]
    then
        echo "Repository Preparation OK"
        exit 0
    else
        echo "Client Preparation Warning. Repository initialized but unable to update repository object on CyBorgBackup."
        echo "Launch this query : $cmd"
        exit 255
    fi
else
    echo "Repository Preparation Failed"
    exit 255
fi
